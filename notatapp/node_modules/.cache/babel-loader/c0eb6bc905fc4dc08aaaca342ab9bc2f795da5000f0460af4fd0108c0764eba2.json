{"ast":null,"code":"var _jsxFileName = \"/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './Components/NotesList';\nimport Search from './Components/Search';\nimport Header from './Components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = localStorage.getItem('notes');\n        if (data) {\n          setNotes(JSON.parse(data));\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && 'dark-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"5bUNu9S6uDNQ7apEIrFjsUZjsPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","nanoid","NotesList","Search","Header","jsxDEV","_jsxDEV","App","_s","notes","setNotes","searchText","setSearchText","darkMode","setDarkMode","fetchData","data","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addNote","text","date","Date","newNote","id","toLocaleDateString","newNotes","deleteNote","filter","note","className","children","handleToggleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchNote","toLowerCase","includes","handleAddNote","handleDeleteNote","_c","$RefreshReg$"],"sources":["/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './Components/NotesList';\nimport Search from './Components/Search';\nimport Header from './Components/Header';\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [searchText, setSearchText] = useState('');\n    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = localStorage.getItem('notes');\n                if (data) {\n                    setNotes(JSON.parse(data));\n                }\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('notes', JSON.stringify(notes));\n    }, [notes]);\n\n    const addNote = (text) => {\n        const date = new Date();\n        const newNote = {\n            id: nanoid(),\n            text: text,\n            date: date.toLocaleDateString(),\n        };\n        const newNotes = [...notes, newNote];\n        setNotes(newNotes);\n    };\n\n    const deleteNote = (id) => {\n        const newNotes = notes.filter((note) => note.id !== id);\n        setNotes(newNotes);\n    };\n\n    return (\n        <div className={`${darkMode && 'dark-mode'}`}>\n            <div className='container'>\n                <Header handleToggleDarkMode={setDarkMode} />\n                <Search handleSearchNote={setSearchText} />\n                <NotesList\n                    notes={notes.filter((note) =>\n                        note.text.toLowerCase().includes(searchText)\n                    )}\n                    handleAddNote={addNote}\n                    handleDeleteNote={deleteNote}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}