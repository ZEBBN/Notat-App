{"ast":null,"code":"var _jsxFileName = \"/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/Components/Note.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MdDeleteForever, MdEdit } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = ({\n  id,\n  text,\n  date,\n  handleDeleteNote,\n  handleStartEditingNote,\n  isEditing,\n  editedNoteText,\n  handleFinishEditingNote\n}) => {\n  _s();\n  const [editedText, setEditedText] = useState(text);\n  const handleChange = event => {\n    setEditedText(event.target.value);\n  };\n  const handleSaveEdit = () => {\n    handleFinishEditingNote();\n  };\n  const handleCancelEdit = () => {\n    setEditedText(text);\n    handleFinishEditingNote();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"8\",\n      cols: \"10\",\n      value: editedNoteText,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save\",\n          onClick: handleSaveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel\",\n          onClick: handleCancelEdit,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MdEdit, {\n          onClick: () => handleStartEditingNote(id, text),\n          className: \"edit-icon\",\n          size: \"1.3em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MdDeleteForever, {\n          onClick: () => handleDeleteNote(id),\n          className: \"delete-icon\",\n          size: \"1.3em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Note, \"nxS747VRjJHXyDUApPjHpy6fAzs=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useState","MdDeleteForever","MdEdit","jsxDEV","_jsxDEV","Note","id","text","date","handleDeleteNote","handleStartEditingNote","isEditing","editedNoteText","handleFinishEditingNote","_s","editedText","setEditedText","handleChange","event","target","value","handleSaveEdit","handleCancelEdit","className","children","rows","cols","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_c","$RefreshReg$"],"sources":["/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/Components/Note.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MdDeleteForever, MdEdit } from 'react-icons/md';\n\nconst Note = ({ id, text, date, handleDeleteNote, handleStartEditingNote, isEditing, editedNoteText, handleFinishEditingNote }) => {\n    const [editedText, setEditedText] = useState(text);\n\n    const handleChange = (event) => {\n        setEditedText(event.target.value);\n    };\n\n    const handleSaveEdit = () => {\n        handleFinishEditingNote();\n    };\n\n    const handleCancelEdit = () => {\n        setEditedText(text);\n        handleFinishEditingNote();\n    };\n\n    return (\n        <div className='note'>\n            {isEditing ? (\n                <textarea\n                    rows='8'\n                    cols='10'\n                    value={editedNoteText}\n                    onChange={handleChange}\n                ></textarea>\n            ) : (\n                <span>{text}</span>\n            )}\n            <div className='note-footer'>\n                <small>{date}</small>\n                {isEditing ? (\n                    <div>\n                        <button className='save' onClick={handleSaveEdit}>\n                            Save\n                        </button>\n                        <button className='cancel' onClick={handleCancelEdit}>\n                            Cancel\n                        </button>\n                    </div>\n                ) : (\n                    <div>\n                        <MdEdit\n                            onClick={() => handleStartEditingNote(id, text)}\n                            className='edit-icon'\n                            size='1.3em'\n                        />\n                        <MdDeleteForever\n                            onClick={() => handleDeleteNote(id)}\n                            className='delete-icon'\n                            size='1.3em'\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Note;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}