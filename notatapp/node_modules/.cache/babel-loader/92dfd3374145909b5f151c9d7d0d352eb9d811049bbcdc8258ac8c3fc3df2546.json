{"ast":null,"code":"var _jsxFileName = \"/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './Components/NotesList'; // Endret casing her\nimport Search from './Components/Search'; // Endret casing her\nimport Header from './Components/Header'; // Endret casing her\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: 'This is my first note!',\n    date: '15/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my second note!',\n    date: '21/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my third note!',\n    date: '28/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my new note!',\n    date: '30/04/2021'\n  }]);\n  const [searchText, setSearchText] = useState('');\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n  }, [notes]);\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && 'dark-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Bvi4Ma6962H0NiVXc1lo0UkAYrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","nanoid","NotesList","Search","Header","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","searchText","setSearchText","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","className","children","handleToggleDarkMode","fileName","_jsxFileName","lineNumber","columnNumber","handleSearchNote","toLowerCase","includes","handleAddNote","handleDeleteNote","_c","$RefreshReg$"],"sources":["/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './Components/NotesList'; // Endret casing her\nimport Search from './Components/Search'; // Endret casing her\nimport Header from './Components/Header'; // Endret casing her\n\nconst App = () => {\n    const [notes, setNotes] = useState([\n        {\n            id: nanoid(),\n            text: 'This is my first note!',\n            date: '15/04/2021',\n        },\n        {\n            id: nanoid(),\n            text: 'This is my second note!',\n            date: '21/04/2021',\n        },\n        {\n            id: nanoid(),\n            text: 'This is my third note!',\n            date: '28/04/2021',\n        },\n        {\n            id: nanoid(),\n            text: 'This is my new note!',\n            date: '30/04/2021',\n        },\n    ]);\n\n    const [searchText, setSearchText] = useState('');\n\n    const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => {\n        const savedNotes = JSON.parse(\n            localStorage.getItem('react-notes-app-data')\n        );\n\n        if (savedNotes) {\n            setNotes(savedNotes);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\n            'react-notes-app-data',\n            JSON.stringify(notes)\n        );\n    }, [notes]);\n\n    const addNote = (text) => {\n        const date = new Date();\n        const newNote = {\n            id: nanoid(),\n            text: text,\n            date: date.toLocaleDateString(),\n        };\n        const newNotes = [...notes, newNote];\n        setNotes(newNotes);\n    };\n\n    const deleteNote = (id) => {\n        const newNotes = notes.filter((note) => note.id !== id);\n        setNotes(newNotes);\n    };\n\n    return (\n        <div className={`${darkMode && 'dark-mode'}`}>\n            <div className='container'>\n                <Header handleToggleDarkMode={setDarkMode} />\n                <Search handleSearchNote={setSearchText} />\n                <NotesList\n                    notes={notes.filter((note) =>\n                        note.text.toLowerCase().includes(searchText)\n                    )}\n                    handleAddNote={addNote}\n                    handleDeleteNote={deleteNote}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}