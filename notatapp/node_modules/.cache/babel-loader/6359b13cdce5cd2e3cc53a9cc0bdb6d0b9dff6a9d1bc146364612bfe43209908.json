{"ast":null,"code":"var _jsxFileName = \"/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './Components/NotesList';\nimport fs from 'fs'; // Importerer file system modulen\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: 'This is my first note!',\n    date: '15/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my second note!',\n    date: '21/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my third note!',\n    date: '28/04/2021'\n  }, {\n    id: nanoid(),\n    text: 'This is my new note!',\n    date: '30/04/2021'\n  }]);\n\n  // Funksjon for å lagre notatene til en JSON-fil\n  const saveNotesToFile = notes => {\n    fs.writeFileSync('notes.json', JSON.stringify(notes), 'utf8');\n  };\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n    saveNotesToFile(newNotes); // Lagrer notatene til JSON-fil\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(NotesList, {\n      notes: notes,\n      handleAddNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"N7XfnYZpmn33jsvGQ7LxNPYIlzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","nanoid","NotesList","fs","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","text","date","saveNotesToFile","writeFileSync","JSON","stringify","addNote","Date","newNote","toLocaleDateString","newNotes","className","children","handleAddNote","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebea009/Documents/GitHub/Notat-App/notatapp/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport NotesList from './Components/NotesList';\nimport fs from 'fs'; // Importerer file system modulen\n\nconst App = () => {\n    const [notes, setNotes] = useState([\n        {\n            id: nanoid(),\n            text: 'This is my first note!',\n            date: '15/04/2021',\n        },\n        {\n            id: nanoid(),\n            text: 'This is my second note!',\n            date: '21/04/2021',\n        },\n        {\n            id: nanoid(),\n            text: 'This is my third note!',\n            date: '28/04/2021',\n        },\n        {\n            id: nanoid(),\n            text: 'This is my new note!',\n            date: '30/04/2021',\n        },\n    ]);\n\n    // Funksjon for å lagre notatene til en JSON-fil\n    const saveNotesToFile = (notes) => {\n        fs.writeFileSync('notes.json', JSON.stringify(notes), 'utf8');\n    };\n\n    const addNote = (text) => {\n        const date = new Date();\n        const newNote = {\n            id: nanoid(),\n            text: text,\n            date: date.toLocaleDateString(),\n        };\n        const newNotes = [...notes, newNote];\n        setNotes(newNotes);\n        saveNotesToFile(newNotes); // Lagrer notatene til JSON-fil\n    };\n\n    return (\n        <div className=\"container\">\n            <NotesList notes={notes} handleAddNote={addNote} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,EAAE,MAAM,IAAI,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAC/B;IACIU,EAAE,EAAET,MAAM,CAAC,CAAC;IACZU,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;EACV,CAAC,EACD;IACIF,EAAE,EAAET,MAAM,CAAC,CAAC;IACZU,IAAI,EAAE,yBAAyB;IAC/BC,IAAI,EAAE;EACV,CAAC,EACD;IACIF,EAAE,EAAET,MAAM,CAAC,CAAC;IACZU,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;EACV,CAAC,EACD;IACIF,EAAE,EAAET,MAAM,CAAC,CAAC;IACZU,IAAI,EAAE,sBAAsB;IAC5BC,IAAI,EAAE;EACV,CAAC,CACJ,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAIL,KAAK,IAAK;IAC/BL,EAAE,CAACW,aAAa,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC,EAAE,MAAM,CAAC;EACjE,CAAC;EAED,MAAMS,OAAO,GAAIN,IAAI,IAAK;IACtB,MAAMC,IAAI,GAAG,IAAIM,IAAI,CAAC,CAAC;IACvB,MAAMC,OAAO,GAAG;MACZT,EAAE,EAAET,MAAM,CAAC,CAAC;MACZU,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAEA,IAAI,CAACQ,kBAAkB,CAAC;IAClC,CAAC;IACD,MAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAK,EAAEW,OAAO,CAAC;IACpCV,QAAQ,CAACY,QAAQ,CAAC;IAClBR,eAAe,CAACQ,QAAQ,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBlB,OAAA,CAACH,SAAS;MAACM,KAAK,EAAEA,KAAM;MAACgB,aAAa,EAAEP;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAACrB,EAAA,CA9CID,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}